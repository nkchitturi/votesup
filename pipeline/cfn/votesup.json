{
  "AWSTemplateFormatVersion":"2010-09-09",
  "Description":"VoteSUp master stack calling nested stacks",
  "Parameters":{
    "KeyName":{
      "Description":"Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type":"AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription":"must be the name of an existing EC2 KeyPair."
    },
    "Repo":{
      "Type":"String",
      "Description":"The name of the votesup repository, not the URL",
      "Default":"votesup"
    },
    "GitHubToken":{
      "NoEcho":"true",
      "Type":"String",
      "Description":"Secret. OAuthToken with access to Repo. Long string of characters and digits. Go to https://github.com/settings/tokens"
    },
    "GitHubUser":{
      "Type":"String",
      "Description":"GitHub UserName. This username must have access to the GitHubToken.",
      "Default":"nkchitturi"
    },
    "BaseTemplateURL":{
      "Type":"String",
      "Description":"S3 Base URL of all the CloudFormation templated used in VoteSUp (without the file names)",
      "Default":"https://s3.amazonaws.com/classicnode-demosungardas/master/"
    },
    "VPCCFNTemplateFile":{
      "Type":"String",
      "Description":"Just the name of the CloudFormation template. Used with BaseTemplateURL.",
      "Default":"vpc.json"
    },
    "CodePipelineCFNTemplateFile":{
      "Type":"String",
      "Description":"Just the name of the CloudFormation template. Used with BaseTemplateURL.",
      "Default":"codepipeline.json"
    },
    "CodePipelineActionsCFNTemplateFile":{
      "Type":"String",
      "Description":"Just the name of the CloudFormation template. Used with BaseTemplateURL.",
      "Default":"cp-custom-actions.json"
    },
    "ENICFNTemplateFile":{
      "Type":"String",
      "Description":"Just the name of the CloudFormation template. Used with BaseTemplateURL.",
      "Default":"app-eni.json"
    },
    "JenkinsCFNTemplateFile":{
      "Type":"String",
      "Description":"Just the name of the CloudFormation template. Used with BaseTemplateURL.",
      "Default":"jenkins.json"
    },
    "PipelineStoreCFNTemplateFile":{
      "Type":"String",
      "Description":"Just the name of the CloudFormation template. Used with BaseTemplateURL.",
      "Default":"stack-outputs.json"
    },
    "IAMCFNTemplateFile":{
      "Type":"String",
      "Description":"Just the name of the CloudFormation template. Used with BaseTemplateURL.",
      "Default":"iam.json"
    },
    "DDBCFNTemplateFile":{
      "Type":"String",
      "Description":"Just the name of the CloudFormation template. Used with BaseTemplateURL.",
      "Default":"dynamodb.json"
    },
    "DDBTableName":{
      "Type":"String",
      "MinLength":"1",
      "MaxLength":"32",
      "Default":"vtab",
      "Description":"Unique name for the generated VoteSUp Dynamo DB table."
    },
    "Branch":{
      "Type":"String",
      "Description":"The GitHub branch to the public VoteSUp repository.",
      "Default":"master"
    },
    "Domain":{
      "Type":"String",
      "Description":"Route53 Hosted Zone name for prod IP (include trailing .). Your AWS account must have access to this Hosted Zone.",
      "Default":"demosungardas.com."
    },
    "ProdHostedZone":{
      "Type":"String",
      "Default":".demosungardas.com",
      "Description":"Route53 Hosted Zone (include leading .). Your AWS account must have access to this Hosted Zone."
    },
    "InstanceType":{
      "Description":"WebServer EC2 instance type",
      "Type":"String",
      "Default":"m3.medium",
      "AllowedValues":[
        "t1.micro",
        "t2.nano",
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large",
        "m1.small",
        "m1.medium",
        "m1.large",
        "m1.xlarge",
        "m2.xlarge",
        "m2.2xlarge",
        "m2.4xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "c1.medium",
        "c1.xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "g2.2xlarge",
        "g2.8xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "d2.xlarge",
        "d2.2xlarge",
        "d2.4xlarge",
        "d2.8xlarge",
        "hi1.4xlarge",
        "hs1.8xlarge",
        "cr1.8xlarge",
        "cc2.8xlarge",
        "cg1.4xlarge"
      ],
      "ConstraintDescription":"must be a valid EC2 instance type."
    },
    "SSHLocation":{
      "Description":"The IP address range that can be used to SSH to the EC2 instances",
      "Type":"String",
      "MinLength":"9",
      "MaxLength":"18",
      "Default":"0.0.0.0/0",
      "AllowedPattern":"(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription":"must be a valid IP CIDR range of the form x.x.x.x/x."
    }
  },
  "Metadata":{
    "AWS::CloudFormation::Interface":{
      "ParameterGroups":[
        {
          "Label":{
            "default":"Dynamic Configuration"
          },
          "Parameters":[
            "BaseTemplateURL",
            "Branch",
            "Domain",
            "ProdHostedZone",
            "DDBTableName",
            "GitHubToken",
            "KeyName"
          ]
        },
        {
          "Label":{
            "default":"CloudFormation Files"
          },
          "Parameters":[
            "CodePipelineActionsCFNTemplateFile",
            "CodePipelineCFNTemplateFile",
            "DDBCFNTemplateFile",
            "ENICFNTemplateFile",
            "IAMCFNTemplateFile",
            "JenkinsCFNTemplateFile",
            "PipelineStoreCFNTemplateFile",
            "VPCCFNTemplateFile"
          ]
        },
        {
          "Label":{
            "default":"Additional Configuration"
          },
          "Parameters":[
            "GitHubUser",
            "InstanceType",
            "Repo",
            "SSHLocation"
          ]
        }
      ],
      "ParameterLabels":{
        "BaseTemplateURL":{
          "default":"S3 URL for Base Template"
        },
        "Branch":{
          "default":"GitHub Branch"
        },
        "CodePipelineActionsCFNTemplateFile":{
          "default":"CFN Template File for Custom Actions"
        },
        "CodePipelineCFNTemplateFile":{
          "default":"CFN Template File for CodePipeline"
        },
        "DDBCFNTemplateFile":{
          "default":"CFN Template File for DynamoDB"
        },
        "DDBTableName":{
          "default":"Unique name for DynamoDB table"
        },
        "Domain":{
          "default":"Domain Name"
        },
        "ENICFNTemplateFile":{
          "default":"CFN Template File for ENI"
        },
        "GitHubToken":{
          "default":"GitHub Token"
        },
        "GitHubUser":{
          "default":"GitHub User"
        },
        "IAMCFNTemplateFile":{
          "default":"CFN Template File for AIM"
        },
        "InstanceType":{
          "default":"EC2 Instance Type"
        },
        "JenkinsCFNTemplateFile":{
          "default":"CFN Template File for Jenkins"
        },
        "KeyName":{
          "default":"EC2 Key Pair Name"
        },
        "PipelineStoreCFNTemplateFile":{
          "default":"CFN Template File for Pipeline Store"
        },
        "ProdHostedZone":{
          "default":"Route 53 Hosted Zone"
        },
        "Repo":{
          "default":"GitHub Repository Name"
        },
        "SSHLocation":{
          "default":"CIDR Block for EC2 Instance"
        },
        "VPCCFNTemplateFile":{
          "default":"CFN Template File for VPC"
        }
      }
    }
  },
  "Mappings":{
    "Region2Examples":{
      "us-east-1":{
        "Examples":"https://s3.amazonaws.com/cloudformation-examples-us-east-1"
      },
      "us-west-2":{
        "Examples":"https://s3-us-west-2.amazonaws.com/cloudformation-examples-us-west-2"
      },
      "us-west-1":{
        "Examples":"https://s3-us-west-1.amazonaws.com/cloudformation-examples-us-west-1"
      },
      "eu-west-1":{
        "Examples":"https://s3-eu-west-1.amazonaws.com/cloudformation-examples-eu-west-1"
      },
      "eu-central-1":{
        "Examples":"https://s3-eu-central-1.amazonaws.com/cloudformation-examples-eu-central-1"
      },
      "ap-southeast-1":{
        "Examples":"https://s3-ap-southeast-1.amazonaws.com/cloudformation-examples-ap-southeast-1"
      },
      "ap-northeast-1":{
        "Examples":"https://s3-ap-northeast-1.amazonaws.com/cloudformation-examples-ap-northeast-1"
      },
      "ap-northeast-2":{
        "Examples":"https://s3-ap-northeast-2.amazonaws.com/cloudformation-examples-ap-northeast-2"
      },
      "ap-southeast-2":{
        "Examples":"https://s3-ap-southeast-2.amazonaws.com/cloudformation-examples-ap-southeast-2"
      },
      "sa-east-1":{
        "Examples":"https://s3-sa-east-1.amazonaws.com/cloudformation-examples-sa-east-1"
      },
      "cn-north-1":{
        "Examples":"https://s3.cn-north-1.amazonaws.com.cn/cloudformation-examples-cn-north-1"
      }
    },
    "AWSInstanceType2Arch":{
      "t1.micro":{
        "Arch":"PV64"
      },
      "t2.nano":{
        "Arch":"HVM64"
      },
      "t2.micro":{
        "Arch":"HVM64"
      },
      "t2.small":{
        "Arch":"HVM64"
      },
      "t2.medium":{
        "Arch":"HVM64"
      },
      "t2.large":{
        "Arch":"HVM64"
      },
      "m1.small":{
        "Arch":"PV64"
      },
      "m1.medium":{
        "Arch":"PV64"
      },
      "m1.large":{
        "Arch":"PV64"
      },
      "m1.xlarge":{
        "Arch":"PV64"
      },
      "m2.xlarge":{
        "Arch":"PV64"
      },
      "m2.2xlarge":{
        "Arch":"PV64"
      },
      "m2.4xlarge":{
        "Arch":"PV64"
      },
      "m3.medium":{
        "Arch":"HVM64"
      },
      "m3.large":{
        "Arch":"HVM64"
      },
      "m3.xlarge":{
        "Arch":"HVM64"
      },
      "m3.2xlarge":{
        "Arch":"HVM64"
      },
      "m4.large":{
        "Arch":"HVM64"
      },
      "m4.xlarge":{
        "Arch":"HVM64"
      },
      "m4.2xlarge":{
        "Arch":"HVM64"
      },
      "m4.4xlarge":{
        "Arch":"HVM64"
      },
      "m4.10xlarge":{
        "Arch":"HVM64"
      },
      "c1.medium":{
        "Arch":"PV64"
      },
      "c1.xlarge":{
        "Arch":"PV64"
      },
      "c3.large":{
        "Arch":"HVM64"
      },
      "c3.xlarge":{
        "Arch":"HVM64"
      },
      "c3.2xlarge":{
        "Arch":"HVM64"
      },
      "c3.4xlarge":{
        "Arch":"HVM64"
      },
      "c3.8xlarge":{
        "Arch":"HVM64"
      },
      "c4.large":{
        "Arch":"HVM64"
      },
      "c4.xlarge":{
        "Arch":"HVM64"
      },
      "c4.2xlarge":{
        "Arch":"HVM64"
      },
      "c4.4xlarge":{
        "Arch":"HVM64"
      },
      "c4.8xlarge":{
        "Arch":"HVM64"
      },
      "g2.2xlarge":{
        "Arch":"HVMG2"
      },
      "g2.8xlarge":{
        "Arch":"HVMG2"
      },
      "r3.large":{
        "Arch":"HVM64"
      },
      "r3.xlarge":{
        "Arch":"HVM64"
      },
      "r3.2xlarge":{
        "Arch":"HVM64"
      },
      "r3.4xlarge":{
        "Arch":"HVM64"
      },
      "r3.8xlarge":{
        "Arch":"HVM64"
      },
      "i2.xlarge":{
        "Arch":"HVM64"
      },
      "i2.2xlarge":{
        "Arch":"HVM64"
      },
      "i2.4xlarge":{
        "Arch":"HVM64"
      },
      "i2.8xlarge":{
        "Arch":"HVM64"
      },
      "d2.xlarge":{
        "Arch":"HVM64"
      },
      "d2.2xlarge":{
        "Arch":"HVM64"
      },
      "d2.4xlarge":{
        "Arch":"HVM64"
      },
      "d2.8xlarge":{
        "Arch":"HVM64"
      },
      "hi1.4xlarge":{
        "Arch":"HVM64"
      },
      "hs1.8xlarge":{
        "Arch":"HVM64"
      },
      "cr1.8xlarge":{
        "Arch":"HVM64"
      },
      "cc2.8xlarge":{
        "Arch":"HVM64"
      }
    },
    "AWSInstanceType2NATArch":{
      "t1.micro":{
        "Arch":"NATPV64"
      },
      "t2.nano":{
        "Arch":"NATHVM64"
      },
      "t2.micro":{
        "Arch":"NATHVM64"
      },
      "t2.small":{
        "Arch":"NATHVM64"
      },
      "t2.medium":{
        "Arch":"NATHVM64"
      },
      "t2.large":{
        "Arch":"NATHVM64"
      },
      "m1.small":{
        "Arch":"NATPV64"
      },
      "m1.medium":{
        "Arch":"NATPV64"
      },
      "m1.large":{
        "Arch":"NATPV64"
      },
      "m1.xlarge":{
        "Arch":"NATPV64"
      },
      "m2.xlarge":{
        "Arch":"NATPV64"
      },
      "m2.2xlarge":{
        "Arch":"NATPV64"
      },
      "m2.4xlarge":{
        "Arch":"NATPV64"
      },
      "m3.medium":{
        "Arch":"NATHVM64"
      },
      "m3.large":{
        "Arch":"NATHVM64"
      },
      "m3.xlarge":{
        "Arch":"NATHVM64"
      },
      "m3.2xlarge":{
        "Arch":"NATHVM64"
      },
      "m4.large":{
        "Arch":"NATHVM64"
      },
      "m4.xlarge":{
        "Arch":"NATHVM64"
      },
      "m4.2xlarge":{
        "Arch":"NATHVM64"
      },
      "m4.4xlarge":{
        "Arch":"NATHVM64"
      },
      "m4.10xlarge":{
        "Arch":"NATHVM64"
      },
      "c1.medium":{
        "Arch":"NATPV64"
      },
      "c1.xlarge":{
        "Arch":"NATPV64"
      },
      "c3.large":{
        "Arch":"NATHVM64"
      },
      "c3.xlarge":{
        "Arch":"NATHVM64"
      },
      "c3.2xlarge":{
        "Arch":"NATHVM64"
      },
      "c3.4xlarge":{
        "Arch":"NATHVM64"
      },
      "c3.8xlarge":{
        "Arch":"NATHVM64"
      },
      "c4.large":{
        "Arch":"NATHVM64"
      },
      "c4.xlarge":{
        "Arch":"NATHVM64"
      },
      "c4.2xlarge":{
        "Arch":"NATHVM64"
      },
      "c4.4xlarge":{
        "Arch":"NATHVM64"
      },
      "c4.8xlarge":{
        "Arch":"NATHVM64"
      },
      "g2.2xlarge":{
        "Arch":"NATHVMG2"
      },
      "g2.8xlarge":{
        "Arch":"NATHVMG2"
      },
      "r3.large":{
        "Arch":"NATHVM64"
      },
      "r3.xlarge":{
        "Arch":"NATHVM64"
      },
      "r3.2xlarge":{
        "Arch":"NATHVM64"
      },
      "r3.4xlarge":{
        "Arch":"NATHVM64"
      },
      "r3.8xlarge":{
        "Arch":"NATHVM64"
      },
      "i2.xlarge":{
        "Arch":"NATHVM64"
      },
      "i2.2xlarge":{
        "Arch":"NATHVM64"
      },
      "i2.4xlarge":{
        "Arch":"NATHVM64"
      },
      "i2.8xlarge":{
        "Arch":"NATHVM64"
      },
      "d2.xlarge":{
        "Arch":"NATHVM64"
      },
      "d2.2xlarge":{
        "Arch":"NATHVM64"
      },
      "d2.4xlarge":{
        "Arch":"NATHVM64"
      },
      "d2.8xlarge":{
        "Arch":"NATHVM64"
      },
      "hi1.4xlarge":{
        "Arch":"NATHVM64"
      },
      "hs1.8xlarge":{
        "Arch":"NATHVM64"
      },
      "cr1.8xlarge":{
        "Arch":"NATHVM64"
      },
      "cc2.8xlarge":{
        "Arch":"NATHVM64"
      }
    },
    "AWSRegionArch2AMI":{
      "us-east-1":{
        "PV64":"ami-5fb8c835",
        "HVM64":"ami-60b6c60a",
        "HVMG2":"ami-e998ea83"
      },
      "us-west-2":{
        "PV64":"ami-d93622b8",
        "HVM64":"ami-f0091d91",
        "HVMG2":"ami-315f4850"
      },
      "us-west-1":{
        "PV64":"ami-56ea8636",
        "HVM64":"ami-d5ea86b5",
        "HVMG2":"ami-943956f4"
      },
      "eu-west-1":{
        "PV64":"ami-95e33ce6",
        "HVM64":"ami-bff32ccc",
        "HVMG2":"ami-83fd23f0"
      },
      "eu-central-1":{
        "PV64":"ami-794a5915",
        "HVM64":"ami-bc5b48d0",
        "HVMG2":"ami-ba1a09d6"
      },
      "ap-northeast-1":{
        "PV64":"ami-393c1957",
        "HVM64":"ami-383c1956",
        "HVMG2":"ami-08e5c166"
      },
      "ap-northeast-2":{
        "PV64":"NOT_SUPPORTED",
        "HVM64":"ami-249b554a",
        "HVMG2":"NOT_SUPPORTED"
      },
      "ap-southeast-1":{
        "PV64":"ami-34bd7a57",
        "HVM64":"ami-c9b572aa",
        "HVMG2":"ami-5a15d239"
      },
      "ap-southeast-2":{
        "PV64":"ami-ced887ad",
        "HVM64":"ami-48d38c2b",
        "HVMG2":"ami-0c1a446f"
      },
      "sa-east-1":{
        "PV64":"ami-7d15ad11",
        "HVM64":"ami-6817af04",
        "HVMG2":"NOT_SUPPORTED"
      },
      "cn-north-1":{
        "PV64":"ami-18ac6575",
        "HVM64":"ami-43a36a2e",
        "HVMG2":"NOT_SUPPORTED"
      }
    },
    "Region2Principal":{
      "us-east-1":{
        "EC2Principal":"ec2.amazonaws.com",
        "OpsWorksPrincipal":"opsworks.amazonaws.com"
      },
      "us-west-2":{
        "EC2Principal":"ec2.amazonaws.com",
        "OpsWorksPrincipal":"opsworks.amazonaws.com"
      },
      "us-west-1":{
        "EC2Principal":"ec2.amazonaws.com",
        "OpsWorksPrincipal":"opsworks.amazonaws.com"
      },
      "eu-west-1":{
        "EC2Principal":"ec2.amazonaws.com",
        "OpsWorksPrincipal":"opsworks.amazonaws.com"
      },
      "ap-southeast-1":{
        "EC2Principal":"ec2.amazonaws.com",
        "OpsWorksPrincipal":"opsworks.amazonaws.com"
      },
      "ap-northeast-1":{
        "EC2Principal":"ec2.amazonaws.com",
        "OpsWorksPrincipal":"opsworks.amazonaws.com"
      },
      "ap-northeast-2":{
        "EC2Principal":"ec2.amazonaws.com",
        "OpsWorksPrincipal":"opsworks.amazonaws.com"
      },
      "ap-southeast-2":{
        "EC2Principal":"ec2.amazonaws.com",
        "OpsWorksPrincipal":"opsworks.amazonaws.com"
      },
      "sa-east-1":{
        "EC2Principal":"ec2.amazonaws.com",
        "OpsWorksPrincipal":"opsworks.amazonaws.com"
      },
      "cn-north-1":{
        "EC2Principal":"ec2.amazonaws.com.cn",
        "OpsWorksPrincipal":"opsworks.amazonaws.com.cn"
      },
      "eu-central-1":{
        "EC2Principal":"ec2.amazonaws.com",
        "OpsWorksPrincipal":"opsworks.amazonaws.com"
      }
    },
    "Region2ARNPrefix":{
      "us-east-1":{
        "ARNPrefix":"arn:aws:"
      },
      "us-west-1":{
        "ARNPrefix":"arn:aws:"
      },
      "us-west-2":{
        "ARNPrefix":"arn:aws:"
      },
      "eu-west-1":{
        "ARNPrefix":"arn:aws:"
      },
      "ap-northeast-1":{
        "ARNPrefix":"arn:aws:"
      },
      "ap-northeast-2":{
        "ARNPrefix":"arn:aws:"
      },
      "ap-southeast-1":{
        "ARNPrefix":"arn:aws:"
      },
      "ap-southeast-2":{
        "ARNPrefix":"arn:aws:"
      },
      "sa-east-1":{
        "ARNPrefix":"arn:aws:"
      },
      "cn-north-1":{
        "ARNPrefix":"arn:aws-cn:"
      },
      "eu-central-1":{
        "ARNPrefix":"arn:aws:"
      }
    }
  },
  "Resources":{
    "LogRole":{
      "Type":"AWS::IAM::Role",
      "DependsOn":[
        "DynamoDBStack"
      ],
      "Properties":{
        "AssumeRolePolicyDocument":{
          "Statement":[
            {
              "Effect":"Allow",
              "Principal":{
                "Service":[
                  "ec2.amazonaws.com"
                ]
              },
              "Action":[
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path":"/",
        "Policies":[
          {
            "PolicyName":"AllowAll",
            "PolicyDocument":{
              "Statement":[
                {
                  "Effect":"Allow",
                  "Action":"*",
                  "Resource":"*"
                }
              ]
            }
          }
        ]
      }
    },
    "LogRoleInstanceProfile":{
      "Type":"AWS::IAM::InstanceProfile",
      "DependsOn":[
        "DynamoDBStack"
      ],
      "Properties":{
        "Path":"/",
        "Roles":[
          {
            "Ref":"LogRole"
          }
        ]
      }
    },
    "CloudFormationLogs":{
      "Type":"AWS::Logs::LogGroup",
      "DependsOn":[
        "DynamoDBStack"
      ],
      "Properties":{
        "RetentionInDays":7
      }
    },
    "WebServerInstance":{
      "Type":"AWS::EC2::Instance",
      "DependsOn":[
        "DynamoDBStack",
        "PipelineStoreStack"
      ],
      "Metadata":{
        "AWS::CloudFormation::Init":{
          "configSets":{
            "install_all":[
              "install_cfn",
              "install_app",
              "install_logs"
            ]
          },
          "install_cfn":{
            "files":{
              "/etc/cfn/cfn-hup.conf":{
                "content":{
                  "Fn::Join":[
                    "",
                    [
                      "[main]\n",
                      "stack=",
                      {
                        "Ref":"AWS::StackId"
                      },
                      "\n",
                      "region=",
                      {
                        "Ref":"AWS::Region"
                      },
                      "\n"
                    ]
                  ]
                },
                "mode":"000400",
                "owner":"root",
                "group":"root"
              },
              "/etc/cfn/hooks.d/cfn-auto-reloader.conf":{
                "content":{
                  "Fn::Join":[
                    "",
                    [
                      "[cfn-auto-reloader-hook]\n",
                      "triggers=post.update\n",
                      "path=Resources.WebServerInstance.Metadata.AWS::CloudFormation::Init\n",
                      "action=/opt/aws/bin/cfn-init -v ",
                      "         --stack ",
                      {
                        "Ref":"AWS::StackName"
                      },
                      "         --resource WebServerInstance ",
                      "         --configsets install_all ",
                      "         --region ",
                      {
                        "Ref":"AWS::Region"
                      },
                      "\n",
                      "runas=root\n"
                    ]
                  ]
                }
              }
            },
            "services":{
              "sysvinit":{
                "cfn-hup":{
                  "enabled":"true",
                  "ensureRunning":"true",
                  "files":[
                    "/etc/cfn/cfn-hup.conf",
                    "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                  ]
                }
              }
            }
          },
          "install_app":{
            "packages":{
              "yum":{
                "httpd":[

                ]
              }
            },
            "files":{
              "/var/www/html/index.html":{
                "content":{
                  "Fn::Join":[
                    "\n",
                    [
                      "<img src=\"",
                      {
                        "Fn::FindInMap":[
                          "Region2Examples",
                          {
                            "Ref":"AWS::Region"
                          },
                          "Examples"
                        ]
                      },
                      "/cloudformation_graphic.png\" alt=\"AWS CloudFormation Logo\"/>",
                      "<h1>Congratulations, you have successfully launched the AWS CloudFormation sample.</h1>"
                    ]
                  ]
                },
                "mode":"000644",
                "owner":"root",
                "group":"root"
              }
            },
            "services":{
              "sysvinit":{
                "httpd":{
                  "enabled":"true",
                  "ensureRunning":"true"
                }
              }
            }
          },
          "install_logs":{
            "packages":{
              "yum":{
                "awslogs":[

                ]
              }
            },
            "files":{
              "/etc/awslogs/awslogs.conf":{
                "content":{
                  "Fn::Join":[
                    "",
                    [
                      "[general]\n",
                      "state_file= /var/awslogs/state/agent-state\n",
                      "[/var/log/cloud-init.log]\n",
                      "file = /var/log/cloud-init.log\n",
                      "log_group_name = ",
                      {
                        "Ref":"CloudFormationLogs"
                      },
                      "\n",
                      "log_stream_name = {instance_id}/cloud-init.log\n",
                      "datetime_format = \n",
                      "[/var/log/cloud-init-output.log]\n",
                      "file = /var/log/cloud-init-output.log\n",
                      "log_group_name = ",
                      {
                        "Ref":"CloudFormationLogs"
                      },
                      "\n",
                      "log_stream_name = {instance_id}/cloud-init-output.log\n",
                      "datetime_format = \n",
                      "[/var/log/cfn-init.log]\n",
                      "file = /var/log/cfn-init.log\n",
                      "log_group_name = ",
                      {
                        "Ref":"CloudFormationLogs"
                      },
                      "\n",
                      "log_stream_name = {instance_id}/cfn-init.log\n",
                      "datetime_format = \n",
                      "[/var/log/cfn-hup.log]\n",
                      "file = /var/log/cfn-hup.log\n",
                      "log_group_name = ",
                      {
                        "Ref":"CloudFormationLogs"
                      },
                      "\n",
                      "log_stream_name = {instance_id}/cfn-hup.log\n",
                      "datetime_format = \n",
                      "[/var/log/cfn-wire.log]\n",
                      "file = /var/log/cfn-wire.log\n",
                      "log_group_name = ",
                      {
                        "Ref":"CloudFormationLogs"
                      },
                      "\n",
                      "log_stream_name = {instance_id}/cfn-wire.log\n",
                      "datetime_format = \n",
                      "[/var/log/httpd]\n",
                      "file = /var/log/httpd/*\n",
                      "log_group_name = ",
                      {
                        "Ref":"CloudFormationLogs"
                      },
                      "\n",
                      "log_stream_name = {instance_id}/httpd\n",
                      "datetime_format = %d/%b/%Y:%H:%M:%S\n"
                    ]
                  ]
                },
                "mode":"000444",
                "owner":"root",
                "group":"root"
              },
              "/etc/awslogs/awscli.conf":{
                "content":{
                  "Fn::Join":[
                    "",
                    [
                      "[plugins]\n",
                      "cwlogs = cwlogs\n",
                      "[default]\n",
                      "region = ",
                      {
                        "Ref":"AWS::Region"
                      },
                      "\n"
                    ]
                  ]
                },
                "mode":"000444",
                "owner":"root",
                "group":"root"
              }
            },
            "commands":{
              "01_create_state_directory":{
                "command":"mkdir -p /var/awslogs/state"
              },
              "02_create_my_tmp_directory":{
                "command":"mkdir -p /tmp/pmd"
              }
            },
            "services":{
              "sysvinit":{
                "awslogs":{
                  "enabled":"true",
                  "ensureRunning":"true",
                  "files":[
                    "/etc/awslogs/awslogs.conf"
                  ]
                }
              }
            }
          }
        }
      },
      "Properties":{
        "SecurityGroups":[
          {
            "Ref":"InstanceSecurityGroup"
          }
        ],
        "KeyName":{
          "Ref":"KeyName"
        },
        "Tags":[
          {
            "Key":"Application",
            "Value":{
              "Ref":"AWS::StackId"
            }
          },
          {
            "Key":"Name",
            "Value":{
              "Ref":"AWS::StackName"
            }
          }
        ],
        "InstanceType":{
          "Ref":"InstanceType"
        },
        "IamInstanceProfile":{
          "Ref":"LogRoleInstanceProfile"
        },
        "ImageId":{
          "Fn::FindInMap":[
            "AWSRegionArch2AMI",
            {
              "Ref":"AWS::Region"
            },
            {
              "Fn::FindInMap":[
                "AWSInstanceType2Arch",
                {
                  "Ref":"InstanceType"
                },
                "Arch"
              ]
            }
          ]
        },
        "UserData":{
          "Fn::Base64":{
            "Fn::Join":[
              "",
              [
                "#!/bin/bash -xe\n",
                "yum update -y aws-cfn-bootstrap\n",
                "/opt/aws/bin/cfn-init -v ",
                "         --stack ",
                {
                  "Ref":"AWS::StackName"
                },
                "         --resource WebServerInstance ",
                "         --configsets install_all ",
                "         --region ",
                {
                  "Ref":"AWS::Region"
                },
                "\n",
                "yum install -y git\n",
                "rm -rf /opt/votesup\n",
                "git clone -b ",
                {
                  "Ref":"Branch"
                },
                " ",
                {
                  "Fn::Join":[
                    "",
                    [
                      "https://github.com/",
                      {
                        "Ref":"GitHubUser"
                      },
                      "/",
                      {
                        "Ref":"Repo"
                      },
                      ".git"
                    ]
                  ]
                },
                " /opt/votesup\n",
                "export AWS_DEFAULT_REGION=",
                {
                  "Ref":"AWS::Region"
                },
                "\n",
                "cd /opt/votesup\n",
                "./bin/configure-jenkins.sh ",
                {
                  "Fn::GetAtt":[
                    "PipelineStoreStack",
                    "Outputs.StackName"
                  ]
                },
                "\n",
                "/opt/aws/bin/cfn-signal -e $? ",
                "         --stack ",
                {
                  "Ref":"AWS::StackName"
                },
                "         --resource WebServerInstance ",
                "         --region ",
                {
                  "Ref":"AWS::Region"
                },
                "\n"
              ]
            ]
          }
        }
      },
      "CreationPolicy":{
        "ResourceSignal":{
          "Count":1,
          "Timeout":"PT30M"
        }
      }
    },
    "InstanceSecurityGroup":{
      "Type":"AWS::EC2::SecurityGroup",
      "Properties":{
        "GroupDescription":"Enable SSH access and HTTP access on the inbound port",
        "SecurityGroupIngress":[
          {
            "IpProtocol":"tcp",
            "FromPort":"22",
            "ToPort":"22",
            "CidrIp":{
              "Ref":"SSHLocation"
            }
          },
          {
            "IpProtocol":"tcp",
            "FromPort":"80",
            "ToPort":"80",
            "CidrIp":"0.0.0.0/0"
          }
        ]
      }
    },
    "DynamoDBStack":{
      "Type":"AWS::CloudFormation::Stack",
      "Properties":{
        "TemplateURL":{
          "Fn::Join":[
            "",
            [
              {
                "Ref":"BaseTemplateURL"
              },
              {
                "Ref":"DDBCFNTemplateFile"
              }
            ]
          ]
        },
        "TimeoutInMinutes":"60",
        "Parameters":{
          "DDBTableName":{
            "Ref":"DDBTableName"
          }
        }
      }
    },
    "VPCStack":{
      "Type":"AWS::CloudFormation::Stack",
      "Properties":{
        "TemplateURL":{
          "Fn::Join":[
            "",
            [
              {
                "Ref":"BaseTemplateURL"
              },
              {
                "Ref":"VPCCFNTemplateFile"
              }
            ]
          ]
        },
        "TimeoutInMinutes":"60"
      }
    },
    "IAMStack":{
      "Type":"AWS::CloudFormation::Stack",
      "Properties":{
        "TemplateURL":{
          "Fn::Join":[
            "",
            [
              {
                "Ref":"BaseTemplateURL"
              },
              {
                "Ref":"IAMCFNTemplateFile"
              }
            ]
          ]
        },
        "TimeoutInMinutes":"60"
      }
    },
    "ENIStack":{
      "Type":"AWS::CloudFormation::Stack",
      "DependsOn":[
        "VPCStack"
      ],
      "Properties":{
        "TemplateURL":{
          "Fn::Join":[
            "",
            [
              {
                "Ref":"BaseTemplateURL"
              },
              {
                "Ref":"ENICFNTemplateFile"
              }
            ]
          ]
        },
        "TimeoutInMinutes":"60",
        "Parameters":{
          "Hostname":{
            "Ref":"AWS::StackName"
          },
          "Domain":{
            "Ref":"Domain"
          },
          "SubnetId":{
            "Fn::GetAtt":[
              "VPCStack",
              "Outputs.SubnetId"
            ]
          }
        }
      }
    },
    "PipelineStoreStack":{
      "Type":"AWS::CloudFormation::Stack",
      "DependsOn":[
        "DynamoDBStack",
        "VPCStack",
        "IAMStack"
      ],
      "Properties":{
        "TemplateURL":{
          "Fn::Join":[
            "",
            [
              {
                "Ref":"BaseTemplateURL"
              },
              {
                "Ref":"PipelineStoreCFNTemplateFile"
              }
            ]
          ]
        },
        "TimeoutInMinutes":"60",
        "Parameters":{
          "UUID":{
            "Ref":"AWS::StackName"
          },
          "MasterStackName":{
            "Ref":"AWS::StackName"
          },
          "VoteSUpS3Bucket":{
            "Ref":"AWS::AccountId"
          },
          "Branch":{
            "Ref":"Branch"
          },
          "KeyName":{
            "Ref":"KeyName"
          },
          "Hostname":{
            "Ref":"AWS::StackName"
          },
          "ProdHostedZone":{
            "Ref":"ProdHostedZone"
          },
          "VPCStackName":{
            "Fn::GetAtt":[
              "VPCStack",
              "Outputs.StackName"
            ]
          },
          "DDBStackName":{
            "Fn::GetAtt":[
              "DynamoDBStack",
              "Outputs.StackName"
            ]
          },
          "IAMStackName":{
            "Fn::GetAtt":[
              "IAMStack",
              "Outputs.StackName"
            ]
          },
          "ENIStackName":{
            "Fn::GetAtt":[
              "ENIStack",
              "Outputs.StackName"
            ]
          }
        }
      }
    },
    "JenkinsStack":{
      "Type":"AWS::CloudFormation::Stack",
      "DependsOn":[
        "DynamoDBStack",
        "VPCStack",
        "IAMStack",
        "PipelineStoreStack",
        "WebServerInstance"
      ],
      "Properties":{
        "TemplateURL":{
          "Fn::Join":[
            "",
            [
              {
                "Ref":"BaseTemplateURL"
              },
              {
                "Ref":"JenkinsCFNTemplateFile"
              }
            ]
          ]
        },
        "TimeoutInMinutes":"60",
        "Parameters":{
          "SubnetId":{
            "Fn::GetAtt":[
              "VPCStack",
              "Outputs.SubnetId"
            ]
          },
          "Ec2Key":{
            "Ref":"KeyName"
          },
          "S3Bucket":{
            "Fn::GetAtt":[
              "PipelineStoreStack",
              "Outputs.VoteSUpS3Bucket"
            ]
          },
          "CfnInitRole":{
            "Fn::GetAtt":[
              "IAMStack",
              "Outputs.InstanceRole"
            ]
          },
          "VPC":{
            "Fn::GetAtt":[
              "VPCStack",
              "Outputs.VPC"
            ]
          },
          "InstanceProfile":{
            "Fn::GetAtt":[
              "IAMStack",
              "Outputs.InstanceProfile"
            ]
          },
          "JobConfigsTarball":{
            "Fn::GetAtt":[
              "PipelineStoreStack",
              "Outputs.JobConfigsTarball"
            ]
          }
        }
      }
    },
    "CodePipelineActionsStack":{
      "Type":"AWS::CloudFormation::Stack",
      "DependsOn":[
        "JenkinsStack"
      ],
      "Properties":{
        "TemplateURL":{
          "Fn::Join":[
            "",
            [
              {
                "Ref":"BaseTemplateURL"
              },
              {
                "Ref":"CodePipelineActionsCFNTemplateFile"
              }
            ]
          ]
        },
        "TimeoutInMinutes":"60",
        "Parameters":{
          "MyBuildProvider":{
            "Fn::GetAtt":[
              "PipelineStoreStack",
              "Outputs.MyBuildProvider"
            ]
          },
          "MyJenkinsURL":{
            "Fn::GetAtt":[
              "JenkinsStack",
              "Outputs.JenkinsURL"
            ]
          }
        }
      }
    },
    "CodePipelineStack":{
      "Type":"AWS::CloudFormation::Stack",
      "DependsOn":[
        "CodePipelineActionsStack"
      ],
      "Properties":{
        "TemplateURL":{
          "Fn::Join":[
            "",
            [
              {
                "Ref":"BaseTemplateURL"
              },
              {
                "Ref":"CodePipelineCFNTemplateFile"
              }
            ]
          ]
        },
        "TimeoutInMinutes":"60",
        "Parameters":{
          "ArtifactStoreBucket":{
            "Fn::GetAtt":[
              "PipelineStoreStack",
              "Outputs.VoteSUpS3Bucket"
            ]
          },
          "GitHubToken":{
            "Ref":"GitHubToken"
          },
          "GitHubUser":{
            "Ref":"GitHubUser"
          },
          "Repo":{
            "Ref":"Repo"
          },
          "Branch":{
            "Ref":"Branch"
          },
          "MyBuildProvider":{
            "Fn::GetAtt":[
              "PipelineStoreStack",
              "Outputs.MyBuildProvider"
            ]
          },
          "MyJenkinsURL":{
            "Fn::GetAtt":[
              "JenkinsStack",
              "Outputs.JenkinsURL"
            ]
          },
          "CodePipelineServiceRole":{
            "Fn::GetAtt":[
              "IAMStack",
              "Outputs.CodePipelineTrustRoleARN"
            ]
          }
        }
      }
    }
  },
  "Outputs":{
    "StackName":{
      "Value":{
        "Ref":"AWS::StackName"
      }
    },
    "CodePipelineURL":{
      "Description":"The URL to the instantiated pipeline",
      "Value":{
        "Fn::GetAtt":[
          "CodePipelineStack",
          "Outputs.CodePipelineURL"
        ]
      }
    },
    "JenkinsURL":{
      "Description":"The URL to Jenkins server that runs the execution of jobs for CodePipeline",
      "Value":{
        "Fn::GetAtt":[
          "JenkinsStack",
          "Outputs.JenkinsURL"
        ]
      }
    },
    "VoteSUpAppURL":{
      "Description":"The URL to VoteSUp application. Only operations once a pipeline has completed its first run.",
      "Value":{
        "Fn::Join":[
          "",
          [
            "http://",
            {
              "Fn::GetAtt":[
                "PipelineStoreStack",
                "Outputs.VoteSUpAppURL"
              ]
            },
            "/"
          ]
        ]
      }
    }
  }
}